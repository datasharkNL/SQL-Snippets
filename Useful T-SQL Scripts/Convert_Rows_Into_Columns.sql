/*
Convert Rows into Columns
M Patrick Dillon
2014/07/17
http://www.sqlservercentral.com/articles/Rows+to+Columns/110983/
*/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO

IF OBJECT_ID('tempdb..#LotNo') IS NOT NULL DROP TABLE #LotNo;
GO

CREATE TABLE [#LotNo]
(
 IDNo  BIGINT IDENTITY(1,1) NOT NULL,
 LotNo VARCHAR(50) NULL
) --ON [PRIMARY]
GO

SET ANSI_PADDING OFF
GO

INSERT INTO #LotNo (LotNo)
SELECT 'A' UNION ALL
SELECT 'B' UNION ALL
SELECT 'C' UNION ALL
SELECT 'D' UNION ALL
SELECT 'E' UNION ALL
SELECT 'F' UNION ALL
SELECT 'G' UNION ALL
SELECT 'H' UNION ALL
SELECT 'I' UNION ALL
SELECT 'J' UNION ALL
SELECT 'K' UNION ALL
SELECT 'L' UNION ALL
SELECT 'M' UNION ALL
SELECT 'N' UNION ALL
SELECT 'O' UNION ALL
SELECT 'P' UNION ALL
SELECT 'Q' UNION ALL
SELECT 'R' UNION ALL
SELECT 'S' UNION ALL
SELECT 'T' UNION ALL
SELECT 'U' UNION ALL
SELECT 'V' UNION ALL
SELECT 'W' UNION ALL
SELECT 'X' UNION ALL
SELECT 'Y' UNION ALL
SELECT 'Z';

/*
SELECT *, (ROW_NUMBER() OVER (ORDER BY LotNo)+ 2) % 3 AS Remainder
  FROM #LotNo;
--*/

WITH mstrtable (lotno, remainder, rowid) 
AS
(
SELECT LotNo,
       (ROW_NUMBER() OVER (ORDER BY lotno) + 2) % 3 AS Remainder,
       CASE WHEN (ROW_NUMBER() OVER (ORDER BY lotno) + 2) % 3 = 0 THEN (ROW_NUMBER() OVER (ORDER BY lotno) + 2)
            ELSE CASE WHEN (ROW_NUMBER() OVER (ORDER BY lotno) + 2) % 3 = 1 THEN (ROW_NUMBER() OVER (ORDER BY lotno) + 1)
				  ELSE (ROW_NUMBER() OVER (ORDER BY lotno))
                 END
       END AS RowID
  FROM #LotNo
)
SELECT MAX(CASE WHEN remainder = 0 THEN LotNo ELSE '' END) AS Col1,
       MAX(CASE WHEN remainder = 1 THEN LotNo ELSE '' END) AS Col2,
       MAX(CASE WHEN remainder = 2 THEN LotNo ELSE '' END) AS Col3,
       rowid 
  FROM mstrtable 
 GROUP BY rowid;